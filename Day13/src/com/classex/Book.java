package com.classex;

/*1. 객체지향언어의 역사
 * 
 * -초창기에는 주로 과학실험이나 미사일 발사실험과 같은 모의 실험을 목적으로 사용되었다.
 * -모의 실험을 위해 실제 세계 와 유사한 가상세계를 컴퓨터 속에 구현하고자 노력하였으며,
 * 	 이렇게 노력한 결과로 객체지향이론이 탄생되었다.
 * - 객체지향이론의 기본 개념은 '실제 세계는 사물(객체)로 이루어져 있으며,
 *   발생하는 모든 사건들은 사물간의 상호작용이라고 한다.
 * 
 * - 실제 사물의 속성과 기능을 분석한 다음 데이터와 함수로 정의 함으로써 실제 세계를 
 * 	  컴퓨터 속에 옮겨 놓은 듯한 가상 세계를 구현하고  이 가상 세계에서의 모의 실험을 
 * 	  함으로써 많은 시간과 노력을 절약함을 목적으로 한다.
 * 
 * - 객체지향 이론 
 * 	  상속, 캡슐화, 추상화 개념을 중심으로 구체화 되었다.
 * 	  
 * 	  1980년대 중반에 C++을 비롯하여 수 많은 객체지향 언어가 발표되었음
 *   자바가 1995년 발표되고 1990년말 인터넷의 발전과 함께 크게 객체지향 언어로서 
 *   자리를 차지 하게 되었다.  
 * 
 * 	 객체 지향 언어
 *  코드의 재사용성이 높다.
 *  신뢰성이 높은 프로그래밍을 가능하게 한다.
 *  
 *  ***** 아주 큰 장점 : 코드의 재사용성이 높고 유지보수가 용이하다.
 *  객체지향의 3대 특징 : 은닉, 상속, 다형성
 *	   
 *  
 *  클래스와 객체의 정의 와 용도
 *  
 *  클래스 : 객체를 정의 해 놓은 것(클래스는 객체의 설계도이다.)
 *  		  객체를 생성하는데 사용된다.
 *  
 *  객체: 실제 존재하는 것, 혹은 사물 또는 개념
 *  객체의 용도 : 기능과 속성에 따라 다르다.
 *  
 *  유형의 객체 : 책상, 의자, 자동차...
 *  무형의 객체 : 수학공식, 공기....
 *  
 *  클래스의 구조 
 *  
 *  클래스 해더
 *  
 *  접근제한자 , 클래스의 종류(abstract(추상클래스)) class 클래스명
 *  
 *  1. 접근제한자 : 현재 클래스를 생성하고 사용하는데 있어 제한을 두는 것
 *  				  public protected, default, private
 *  
 *  
 *  - 맴버필드(속성 , 변수)
 *	 1.변수, 상수 
 *  2. static 변수, 상수와 instance 변수와 상수로 구성됨 
 *  
 *  -맴버 메소드 
 *  1. 특정한 일을 수행하는 행위를 의미함
 *  	동작을 나타냄
 *  2. static 메소드, instance 메소드
 *  
 *  
 *  
 *  - 생성자(Constructor) 
 *   - 생성자는 객체의 생성을 컴퓨터에게 알리는 역할과 초기화 역할을 담당한다.
 *   - 생성자의 형식
 *   	접근 제한자 클래스명(매개변수) {}
 *   - 접근 제한자는 public
 *   - 반환형은 지정하지 않는다. 
 *      
 *  
 *  
*/
class Book {
	String name; // 책 제목
	String writer; // 책 저자
	int price; // 책 가격
	int nowPage;
	String isbn;

	// 생성자
	// 접근제어자 메서드명
	public Book() {
	}

//	public Book () {
//		this.name = name
//	}

	// 멤버 메소드
	public void nextPage() {
		nowPage++;
	}

	public void previousPage() {
		nowPage--;
	}

}
